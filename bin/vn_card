#!/bin/bash
#
# modified from http://github.com/mitchweaver/bin
# Records a selected rectangle with ffmpeg.
#

TMPDIR="${TMPDIR:-/tmp}"
[[ ! -f $TMPDIR/record ]] && touch $TMPDIR/record
pid="$(< $TMPDIR/record)"
if [[ -d /proc/"$pid/fd" ]]; then
	wavname="$(< '/tmp/record_name')"
  name="${wavname%.*}.opus"

  # make  sure everything has been written
	sleep 2

	kill -s 2 "$pid"
	rm "$TMPDIR/record"
	rm "$TMPDIR/record_name"

	# wait for ffmpeg to finish writing the file and exiting
	sleep 0.5

  ffmpeg -i "$TMPDIR/$wavname" -c:a libopus -b:a 96K "$TMPDIR/$name"

	mv "$TMPDIR/$name" "/home/ym/.local/share/Anki2/User 1/collection.media/"
	clipboard="$(jq -aRs . <<< "$((xclip -selection clipboard -o; echo) | while read -r line; do echo -n "$line<br>"; done)")"
	echo $clipboard

cat << EOF > /tmp/req
{
    "action": "findNotes",
    "version": 6,
    "params": {
        "query": "deck:* added:1 is:new"
    }
}
EOF


# note_id="$(curl --silent -H "Content-Type: application/json" --data @/tmp/req 'http://127.0.0.1:8765/' | jq  ".result | sort | last")"
resp="$(curl --silent -H "Content-Type: application/json" --data @/tmp/req 'http://127.0.0.1:8765/')"
note_id="$(echo "$resp" | jq  ".result | sort | last")"
echo "$note_id"


# TODO(YM): /tmp/req -> $TMPDIR/<some unique name>

cat << EOF > /tmp/req
{
  "action": "updateNoteFields",
  "version": 6,
  "params": {
	"note": {
      "id": $note_id,
      "fields": {
        "Examples": $clipboard,
        "Audio": "[sound:$name]"
      }
    }
  }
}
EOF

	resp="$(curl --silent -H "Content-Type: application/json" --data @/tmp/req 'http://127.0.0.1:8765/')"
	cat /tmp/req

cat << EOF > /tmp/req
{
    "action": "addTags",
    "version": 6,
    "params": {
        "notes": [$note_id],
        "tags": "vn-create"
    }
}
EOF
	resp="$(curl --silent -H "Content-Type: application/json" --data @/tmp/req 'http://127.0.0.1:8765/')"
	rm /tmp/req
  rm "$TMPDIR/$wavname"
	echo "$resp"
	notify-send -a "Finished recording" "$resp"

else
	name="$(date +'%F%H%M%S').wav"
	pacat --record --file-format=wav "$TMPDIR/$name" > "$TMPDIR/${name}_log" 2>&1 & disown
  ptpid=$!
  sleep 0.1
  kill -0 $ptpid &> /dev/null
  if [[ $? -ge 1 ]]; then
    rm "$TMPDIR/$name"
    notify-send -a "vn_card: error" "failed to run!!, enabling pipewire-pulse and retrying"
    systemctl start --user pipewire
    systemctl start --user pipewire-pulse
    pacat --record --file-format=wav "$TMPDIR/$name" > "$TMPDIR/${name}_log" 2>&1 & disown
    ptpid=$!
    sleep 0.1
    kill -0 $ptpid &> /dev/null
    if [[ $? -ge 1 ]]; then
      rm "$TMPDIR/$name"
      notify-send -a "vn_card: error" "starting pipewire-pulse didn't work, exiting"
      exit 1
    fi
  fi

	notify-send -a "Started recording" "$name"

	echo $ptpid > $TMPDIR/record
	echo "$name" > $TMPDIR/record_name
fi

