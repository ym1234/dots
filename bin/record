#!/bin/sh
#
# modified from http://github.com/mitchweaver/bin
# Records a selected rectangle with ffmpeg.
#

TMPDIR="${TMPDIR:-/tmp}"
DIR="${DIR:-$HOME/Drive/Media/Recordings}"
[[ ! -f $TMPDIR/record ]] && touch $TMPDIR/record
pid="$(< $TMPDIR/record)"
upload=${1:-1} # getopts or something
if [[ -d /proc/"$pid/fd" ]]; then
	name="$(< '/tmp/record_name')"

	kill -s 2 "$pid"; sleep 0.5

  msg1="Recording: finished recording"
  msg2="$(basename $name)"
  if [[ $upload = 1 ]]; then
    notify-send -a "Recording: uploading clip" "$(basename $name)"
    url=$(curl -sF"file=@$name" https://0x0.st)
    [[ "$(wc -l <<< "$url")" -gt 1 ]] && notify-send -a "Recording: upload failed" "$name" && exit

    xclip -selection clipboard -in <<< "$url"
    msg1="Recording: upload succeeded"
    msg2="$url"
  fi

  notify-send -a "$msg1" "$msg2"
else
	readarray -t -d' ' coord <<< $(slop -q -f '%x %y %w %h') # XXX: don't quote, or you'll end up with a newline in the last array member
	[[ ${#coord[@]} = 0 ]] && exit 1

	name="$DIR/$(date +'%F:%R:%S').mp4"
  notify-send -a "Recording" "$(basename $name)"
  # XXX: -r 30fps? 60fps?
  # -nostdin breaks the signal handling in ffmpeg or something
	ffmpeg -y \
    -f x11grab -r 30 -s ${coord[2]}x${coord[3]} -i :0+${coord[0]},${coord[1]} \
    -f pulse -ac 2 -i default \
    -acodec aac -ab 128k \
    -vcodec libx264 -pix_fmt yuv420p -profile:v baseline -r 30 \
    -level 3 -strict 2 "$name" > $TMPDIR/ffmpeg_out 2>&1 & disown

	echo $! > $TMPDIR/record
	echo "$name" > $TMPDIR/record_name
fi

